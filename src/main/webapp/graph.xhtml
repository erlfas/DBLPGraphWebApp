<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>Coauthor graph</title>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.15.1/vis.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.15.1/vis.min.css" rel="stylesheet" type="text/css" />
        <h:outputStylesheet library="css" name="styles.css"/>
    </h:head>
    <h:body>
        <div id="visualization"></div>
        <script type="text/javascript">
            
            
            var network;

            var nodes = new vis.DataSet();
            var edges = new vis.DataSet();
            var gephiImported;

            loadJSON("/webresources/graph/"${searchBean.name},redrawAll);

            var container = document.getElementById('visualization');
            var data = {
                nodes: nodes,
                edges: edges
            };
            var options = {
                nodes: {
                    shape: 'dot',
                    radiusMin: 10,
                    radiusMax: 30,
                    fontSize: 12,
                    fontFace: "Tahoma",
                    scaleFontWithValue:true,
                    fontSizeMin:8,
                    fontSizeMax:20,
                    fontThreshold:12,
                    fontSizeMaxVisible:20
                },
                edges: {
                    width: 0.15,
                    inheritColor: "from",
                    fontSize: 12,
                    fontFace: "Tahoma",
                    scaleFontWithValue:true,
                    fontSizeMin:8,
                    fontSizeMax:20,
                    fontThreshold:12,
                    fontSizeMaxVisible:20,
                    fontStrokeWidth:1,
                    fontStrokeColor: "#d1d1d1",
                    fontFill: "none"
                },
                tooltip: {
                    delay: 200,
                    fontSize: 12,
                    color: {
                        background: "#fff"
                    }
                },
                smoothCurves: {dynamic:false, type: "continuous"},
                stabilize: false,
                physics: {barnesHut: {gravitationalConstant: -10000, springConstant: 0.002, springLength: 150}},
                hideEdgesOnDrag: true
            };

            network = new vis.Network(container, data, options);

            /**
            * This function fills the DataSets. These DataSets will update the network.
            */
            function redrawAll(gephiJSON) {
                if (gephiJSON.nodes === undefined) {
                    gephiJSON = gephiImported;
                }
                else {
                    gephiImported = gephiJSON;
                }

                nodes.clear();
                edges.clear();

                var allowedToMove = true;
                var parseColor = true;
                var parsed = vis.network.gephiParser.parseGephi(gephiJSON, {allowedToMove:true, parseColor:true});

                // add the parsed data to the DataSets.
                nodes.add(parsed.nodes);
                edges.add(parsed.edges);

                var data = nodes.get(2); // get the data from node 2
                nodeContent.innerHTML = syntaxHighlight(data); // show the data in the div
                network.zoomExtent(); // zoom to fit
            }

            // from http://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript
            function syntaxHighlight(json) {
                if (typeof json != 'string') {
                    json = JSON.stringify(json, undefined, 2);
                }
                json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
                return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                    var cls = 'number';
                    if (/^"/.test(match)) {
                        if (/:$/.test(match)) {
                            cls = 'key';
                        } else {
                            cls = 'string';
                        }
                    } else if (/true|false/.test(match)) {
                        cls = 'boolean';
                    } else if (/null/.test(match)) {
                        cls = 'null';
                    }
                    return '<span class="' + cls + '">' + match + '</span>';
                });
            }

            function loadJSON(path, success, error) {
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            success(JSON.parse(xhr.responseText));
                        }
                        else {
                            error(xhr);
                        }
                    }
                };
                xhr.open("GET", path, true);
                xhr.send();
            }
            
            
        </script>
    </h:body>
</html>